@model BR.EzTravel.Web.Models.Admin.PackageCreateViewModel
@{
    ViewBag.Title = "Create a Holiday Package";
    Layout = "~/Areas/EN/Views/Shared/_AdminLayout.cshtml";
}

<div class="col-xs-12 col-sm-9">
    <p class="pull-right visible-xs">
        <button type="button" class="btn btn-primary btn-xs" data-toggle="offcanvas">Toggle nav</button>
    </p>

    <div class="row">
        <div class="col-md-12" role="main">
            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frmCreate", onsubmit = "disableSubmit(this);", enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <div class="bs-docs-section">
                    <h1 class="page-header">@ViewBag.Title</h1>
                    <p>
                        <button type="submit" class="btn btn-primary">
                            <i class="glyphicon glyphicon-save"></i>
                            Save
                        </button>
                    </p>
                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Title, new { @class = "control-label" })
                            @Html.TextBoxFor(m => m.Title, new { @class = "form-control col-md-12" })
                            @Html.ValidationMessageFor(m => m.Title)
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Price, new { @class = "control-label" })
                            @Html.TextBoxFor(m => m.Price, new { @class = "form-control col-md-12 numbersonly" })
                            @Html.ValidationMessageFor(m => m.Price)
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.CountryID, new { @class = "control-label" })
                            @Html.DropDownListFor(m => m.CountryID, Model.Countries, new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.CategoryID, new { @class = "control-label" })
                            @Html.DropDownListFor(m => m.CategoryID, Model.Categories, new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            <label for="file">Thumbnail</label>
                            <input type="file" id="file" name="file" />
                            <img id="img-preview" src="#" alt="your thumbnail" style="max-width: 700px; max-height: 500px;" />
                        </div>
                        @*<div class="form-group" id="fileupload">
                            <label>Detail Images</label>
                            <br />
                            <span class="btn btn-success fileinput-button">
                                <i class="glyphicon glyphicon-plus"></i>
                                <span>Add files...</span>
                                <input type="file" name="files" id="files" multiple>
                            </span>

                            <!-- The table listing the files available for upload/download -->
                            <table role="presentation" class="table table-striped"><tbody class="files"></tbody></table>
                        </div>*@
                        <div id="multiple" class="form-group">
                            <label for="file">Detail Images</label>
                            <br />
                            <input type="file" id="files" name="files" multiple />
                            <div id="img-preview-files">

                            </div>
                        </div>
                        @*<div id="single" class="form-group">
                            <label for="file">Detail Images</label>
                            <br />
                            <input type="file" class="single" name="images" /><br />
                            <input type="file" class="single" name="images" /><br />
                            <input type="file" class="single" name="images" /><br />
                        </div>*@
                        <div class="form-group">
                            @Html.LabelFor(m => m.Description, new { @class = "control-label" })
                            @Html.TextAreaFor(m => m.Description, new { @class = "form-control", rows = "15" })
                            @Html.ValidationMessageFor(m => m.Description)
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Days, new { @class = "control-label" })
                            @Html.EditorFor(m => m.Days, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                            @Html.ValidationMessageFor(m => m.Days)
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Nights, new { @class = "control-label" })
                            @Html.EditorFor(m => m.Nights, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                            @Html.ValidationMessageFor(m => m.Nights)
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.StartDT, new { @class = "control-label" })
                            @Html.EditorFor(m => m.StartDT)
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.EndDT, new { @class = "control-label" })
                            @Html.EditorFor(m => m.EndDT)
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.SelectedActivities, new { @class = "control-label" })

                            @foreach (var item in Model.Activities)
                            {
                                <div class="checkbox">
                                    <label>
                                        <input type="checkbox" value="@item.Value" id="SelectedActivities" name="SelectedActivities" /> @item.Text
                                    </label>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <p>
                    <button type="submit" class="btn btn-primary">
                        <i class="glyphicon glyphicon-save"></i>
                        Save
                    </button>
                </p>
            }
        </div>
    </div>
</div>


@section styles
{
    @Styles.Render("~/Content/fileupload")
}

@section scripts
{
    <!-- The template to display files available for upload -->
    <script id="template-upload" type="text/x-tmpl">
        {% for (var i=0, file; file=o.files[i]; i++) { %}
        <tr class="template-upload fade">
            <td>
                <span class="preview"></span>
            </td>
            <td>
                <p class="name">{%=file.name%}</p>
                <strong class="error text-danger"></strong>
            </td>
            <td>
                {% if (!i) { %}
                <button class="btn btn-warning cancel">
                    <i class="glyphicon glyphicon-ban-circle"></i>
                    <span>Cancel</span>
                </button>
                {% } %}
            </td>
        </tr>
        {% } %}
    </script>

    <!-- The template to display files available for download -->
    <script id="template-download" type="text/x-tmpl">
        {% for (var i=0, file; file=o.files[i]; i++) { %}
        <tr class="template-download fade">
            {% if (file.error) { %}
            <td></td>
            <td class="name"><span>{%=file.name%}</span></td>
            <td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>
            <td class="error" colspan="2"><span class="label label-important">Error</span> {%=file.error%}</td>
            {% } else { %}
            <td class="preview">
                {% if (file.thumbnail_url) { %}
                <a href="{%=file.url%}" title="{%=file.name%}" data-gallery="gallery" download="{%=file.name%}"><img src="{%=file.thumbnail_url%}"></a>
                {% } %}
            </td>
            <td class="name">
                <a href="{%=file.url%}" title="{%=file.name%}" data-gallery="{%=file.thumbnail_url&&'gallery'%}" download="{%=file.name%}">{%=file.name%}</a>
            </td>
            <td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>
            <td colspan="2"></td>
            {% } %}
            <td class="delete">
                <button class="btn btn-danger" data-type="{%=file.delete_type%}" data-url="{%=file.delete_url%}" {% if (file.delete_with_credentials) { %} data-xhr-fields='{"withCredentials":true}' {% } %}>
                    <i class="icon-trash icon-white"></i>
                    <span>Delete</span>
                </button>
                <input type="checkbox" name="delete" value="1">
            </td>
        </tr>
        {% } %}
    </script>


    @Scripts.Render("~/bundles/fileupload")

    <script type="text/javascript">
        var filesList = new Array();
        $(document).ready(function () {
            $("#file").change(function () {
                readURL(this);
            });


            //$('#fileupload').fileupload({
            //    acceptFileTypes: /(\.|\/)(gif|jpe?g|png|bmp)$/i,
            //    autoUpload: false,
            //    replaceFileInput: false,
            //    singleFileUploads: false,
            //    sequentialUploads: true,
            //    maxFileSize: 10240000,
            //    maxNumberOfFiles: 20
            //})
            //;

            var startDateId = '#' + '@(Html.IdFor(m => m.StartDT))';
            var endDateId = '#' + '@(Html.IdFor(m => m.EndDT))';

            // Select a Date Range with datepicker
            $(startDateId).datepicker("option", "onClose", function (selectedDate) {
                $(endDateId).datepicker("option", "minDate", selectedDate);
                $(this).valid();
            });

            //if (window.FileReader != null) {
            //    $('#single').hide();
            //    $('.single').prop('disabled', true);
            //} else {
            //    $('#multiple').hide();
            //    $('.multiple').prop('disabled', true);
            //}

            document.getElementById('files').addEventListener('change', handleFileSelect, false);
        });

        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#img-preview').attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        function handleFileSelect() {
            //Check File API support
            if (window.File && window.FileList && window.FileReader) {

                var files = event.target.files; //FileList object
                var output = document.getElementById("img-preview-files");
                output.innerHTML = "";

                for (var i = 0; i < files.length; i++) {
                    var file = files[i];
                    //Only pics
                    if (!file.type.match('image')) continue;

                    var picReader = new FileReader();
                    picReader.addEventListener("load", function (event) {
                        var picFile = event.target;
                        var div = document.createElement("div");
                        div.innerHTML = "<img style='max-width: 300px; max-height: 200px;' src='" + picFile.result + "'" + "title='" + picFile.name + "'/>";
                        output.insertBefore(div, null);
                    });
                    //Read the image
                    picReader.readAsDataURL(file);
                }
            } else {
                console.log("Your browser does not support File API");
            }
        }
    </script>
}

